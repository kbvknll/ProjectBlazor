@page "/projects"
@using ProjectBlazor.Models
@using ProjectBlazor.Services
@inject ProjectService ProjectService
@inject NavigationManager Navigation

<h3>Проекты</h3>

@if (projects == null)
{
    <p>Загрузка...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Название</th>
                <th>Дата начала</th>
                <th>Дата окончания</th>
                <th>Стоимость</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.StartDate.ToShortDateString()</td>
                    <td>@project.EndDate.ToShortDateString()</td>
                    <td>@project.Cost.ToString("C")</td>
                    <td>
                        <button @onclick="() => EditProject(project.Id)">Редактировать</button>
                        <button @onclick="() => DeleteProject(project.Id)">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="NavigateToCreateProject">Создать новый проект</button>

@code {
    private List<Project> projects;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectsAsync();
    }

    private void NavigateToCreateProject()
    {
        Navigation.NavigateTo("/create-project");
    }

    private void EditProject(int id)
    {
        Navigation.NavigateTo($"/edit-project/{id}");
    }

    private async System.Threading.Tasks.Task DeleteProject(int id)
    {
        await ProjectService.DeleteProjectAsync(id);
        projects = await ProjectService.GetProjectsAsync(); 
    }
}